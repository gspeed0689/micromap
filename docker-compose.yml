volumes:
  pg-data:

services:
  db:
    image: postgres:16.6
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_DB: ${PGDATABASE}
      PGUSER: ${PGUSER}
    ports:
      - "${PGPORT:-5432}:5432"
    healthcheck:
      test: pg_isready --username ${PGUSER} --dbname ${PGDATABASE}
      start_period: 30s

  api:
    depends_on:
      db:
        condition: service_healthy
        restart: true
    image: micromap-api:0.0.1
    build:
      context: ./micromap-api
    ports:
      - "8000:8000"
    environment:
      PGHOST: db
      PGDATABASE: ${PGDATABASE}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGPORT: ${PGPORT:-5432}
      API_KEY_HASH: ${API_KEY_HASH}
      CORS_ORIGINS: ${CORS_ORIGINS}
      MAX_RESULTS: ${MAX_RESULTS}
      ROOT_PATH: /${ROOT_PATH}/api  # Should not have a trailing slash
      PROXY_SERVER: web

  web:
    depends_on:
      api:
        condition: service_healthy
        restart: true
    image: micromap-web:0.0.1
    build:
      context: ./wwwroot
      args:
        API_IMAGE: "micromap-api:0.0.1"
    ports:
      - "80:80"
    environment:
      ROOT_PATH: ${ROOT_PATH}  # Should not have a trailing slash
      API_HOST: api
      CATALOG_ID: ${CATALOG_ID}
    healthcheck:
      test: wget -O /dev/null http://localhost/${ROOT_PATH} || exit 1
      start_period: 30s
